#+TITLE: Emacs settings
#+AUTHOR: Erik Šabič

Some settings apply to Emacs versions greater than 24, therefore
that's the required Emacs version of this config.


* Init.el

  Load this org file in init.el. Tangle with C-c C-v t.

#+BEGIN_SRC emacs-lisp :tangle init.el
  (require 'org)
  (org-babel-load-file
   (expand-file-name "settings.org"
                     user-emacs-directory))
#+END_SRC


* Package.el
** Archives

#+BEGIN_SRC emacs-lisp
  (setq package-archives '(("melpa" . "http://melpa.org/packages/")
                           ("gnu" . "http://elpa.gnu.org/packages/")))
#+END_SRC

** Package list

   A list of packages that I want.

#+NAME: package-list
   - async
   - beacon
   - cyberpunk-theme
   - elm-mode
   - geiser
   - go-errcheck
   - go-mode
   - golden-ratio
   - golint
   - hydra
   - ido-vertical-mode
   - js2-mode
   - latex-preview-pane
   - leuven-theme
   - magit
   - org-bullets
   - sudo-ext
   - with-editor
   - zlc

** Automatic installation

	Call package-initialize, fetch the package repositories and
	install any package from the list that is missing.

#+BEGIN_SRC emacs-lisp :var list=package-list
  (package-initialize)

  (unless package-archive-contents
    (package-refresh-contents))

  (dolist (package-name list)
    (setq package (intern package-name))
    (unless (package-installed-p package)
      (package-install package)))
#+END_SRC


* General

  All subsections here do something with data from tables.

** Keybindings

   Named keys have to be surrounded with angle brackets. Runs
   global-set-key on the table.

#+TBLNAME: keybindings
   | <f12>   | switch-to-prev-buffer |
   | S-<f12> | switch-to-next-buffer |
   | <f9>    | eshell                |
   | C-<f4>  | kill-buffer           |
   | C-x g   | magit-status          |
   | `       | other-window          |

#+BEGIN_SRC emacs-lisp :var data=keybindings
  (mapc (lambda (row)
          (global-set-key (kbd (car row))
                          (intern (car (cdr row)))))
        data)
#+END_SRC

** Global minor modes

#+TBLNAME: modes
   | blink-cursor  | -1 |
   | menu-bar      | -1 |
   | tool-bar      | -1 |
   | beacon        | t  |
   | column-number | t  |
   | golden-ratio  | t  |
   | show-paren    | t  |

#+BEGIN_SRC emacs-lisp :var data=modes
  (mapc (lambda (row)
          (funcall (intern (concat (car row) "-mode"))
                   (car (cdr row))))
        data)
#+END_SRC

** Variables

#+TBLNAME: vars
   | echo-keystrokes       | 0.001 |
   | beacon-size           |    80 |
   | beacon-blink-delay    |     0 |
   | tab-width             |     4 |
   | show-paren-delay      | 0.001 |
   | next-line-addnewlines |     t |
   | doc-view-continuous   |     t |

#+BEGIN_SRC emacs-lisp :var data=vars
  (mapc (lambda (row)
          (set (intern (car row)) (car (cdr row))))
        data)
#+END_SRC

** Replace the ring-bell

#+BEGIN_SRC emacs-lisp
  (setq ring-bell-function
        (lambda ()
          (call-process "play" nil 0 nil
                        "~/.emacs.d/bell.wav")))
#+END_SRC


* Org

** Org-bullets

#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC


* Golang

  https://github.com/dominikh/go-mode.el

#+BEGIN_SRC emacs-lisp
(add-hook 'before-save-hook 'gofmt-before-save)
#+END_SRC

** Goimports

  Install goimports and replace gofmt.

#+BEGIN_SRC sh :tangle no
go get golang.org/x/tools/cmd/goimports
#+END_SRC

#+BEGIN_SRC emacs-lisp
(setq gofmt-command "goimports")
#+END_SRC

** Completion

   Requires gocode:

#+BEGIN_SRC sh :tangle no
go get github.com/nsf/gocode
#+END_SRC

#+BEGIN_SRC emacs-lisp
(require 'go-complete)
(add-hook 'completion-at-point-functions 'go-complete-at-point)
#+END_SRC


* Magit

  A git porcelain http://magit.vc/

#+BEGIN_SRC emacs-lisp
  (add-to-list 'load-path "~/.emacs.d/site-lisp/magit/lisp")
  (require 'magit)

  (with-eval-after-load 'info
    (info-initialize)
    (add-to-list 'Info-directory-list
             "~/.emacs.d/site-lisp/magit/Documentation/"))
#+END_SRC


* Windows and minibuffer

#+BEGIN_SRC emacs-lisp
  (require 'golden-ratio)

  ;; save all buffers in focus-out-hook
  (add-hook 'focus-out-hook (lambda () (save-some-buffers t)))
#+END_SRC

** Ido

#+BEGIN_SRC emacs-lisp

  (require 'ido-vertical-mode)
  (ido-mode 1)
  (ido-vertical-mode 1)

#+END_SRC


