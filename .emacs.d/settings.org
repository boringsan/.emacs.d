#+TITLE: Emacs settings
#+AUTHOR: Erik Šabič

Some settings apply to Emacs versions greater than 24 only, so
therefore that's the required Emacs version of this config.

* General
** Package.el
*** Archives

#+BEGIN_SRC emacs-lisp
  (setq package-archives '(("melpa" . "http://melpa.org/packages/")
                           ("gnu" . "http://elpa.gnu.org/packages/")))
#+END_SRC

*** Package list

   A list of packages that I want.

#+BEGIN_SRC emacs-lisp
  (setq package-list '(async beacon cyberpunk-theme flymake-go
        geiser go-errcheck go-mode golden-ratio golint helm hydra
        js2-mode latex-preview-pane leuven-theme magit
        org-beautify-theme org-bullets sudo-ext with-editor zlc))
#+END_SRC

*** Automatic installation

   Initialize packages and install the ones missing from the list.

#+BEGIN_SRC emacs-lisp
  (package-initialize) ; activate all the packages (in particular autoloads)

  ; fetch the list of available packages 
  (unless package-archive-contents
    (package-refresh-contents))

  ; install the missing packages
  (dolist (package package-list)
    (unless (package-installed-p package)
      (package-install package)))
#+END_SRC

** Keybindings

  Named keys have to be surrounded with angle brackets.

#+BEGIN_SRC emacs-lisp
  ;; magit
  (global-set-key (kbd "C-x g") 'magit-status)

  ;; helm
  (global-set-key (kbd "C-h SPC") 'helm-all-mark-rings)
  (global-set-key (kbd "M-x") 'helm-M-x)

  (global-set-key (kbd "`") 'other-window)
  (global-set-key (kbd "C-<f4>") 'kill-buffer)
#+END_SRC

** Variables

#+BEGIN_SRC emacs-lisp
  (blink-cursor-mode -1)
  (column-number-mode t)
  (setq echo-keystrokes 0.001)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
#+END_SRC

** Beacon

#+BEGIN_SRC emacs-lisp
  (beacon-mode 1)
  (setq beacon-blink-delay 0
        beacon-color 0.1
        beacon-size 80)
#+END_SRC


* Org

** Org-bullets

#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC


* Golang

  https://github.com/dominikh/go-mode.el

#+BEGIN_SRC emacs-lisp
(add-hook 'before-save-hook 'gofmt-before-save)
#+END_SRC

** Goimports

  Install goimports and replace gofmt.

#+BEGIN_SRC sh :tangle no
go get golang.org/x/tools/cmd/goimports
#+END_SRC

#+BEGIN_SRC emacs-lisp
(setq gofmt-command "goimports")
#+END_SRC

** Completion

   Requires gocode:

#+BEGIN_SRC sh :tangle no
go get github.com/nsf/gocode
#+END_SRC

#+BEGIN_SRC emacs-lisp
(require 'go-complete)
(add-hook 'completion-at-point-functions 'go-complete-at-point)
#+END_SRC


* Magit

  A git porcelain http://magit.vc/

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/site-lisp/magit/lisp")
(require 'magit)

(with-eval-after-load 'info
  (info-initialize)
  (add-to-list 'Info-directory-list
	       "~/.emacs.d/site-lisp/magit/Documentation/"))
#+END_SRC


* Helm

#+BEGIN_SRC emacs-lisp
  (require 'helm)
  (require 'helm-config)
  (require 'golden-ratio)
#+END_SRC

** Keybindings

   Switch functions of <tab> and C-z.

#+BEGIN_SRC emacs-lisp
  (define-key helm-map (kbd "<tab>")
    'helm-execute-persistent-action)
  (define-key helm-map (kbd "C-i")
    'helm-execute-persistent-action)
  (define-key helm-map (kbd "C-z")
    'helm-select-action)
#+END_SRC

** Eshell integration

#+BEGIN_SRC emacs-lisp
  ;; Compatibility 24.2/24.3
  (unless (fboundp 'eshell-pcomplete)
    (defalias 'eshell-pcomplete 'pcomplete))
  (unless (fboundp 'eshell-complete-lisp-symbol)
    (defalias 'eshell-complete-lisp-symbol 'lisp-complete-symbol))

  (add-hook 'eshell-mode-hook
            #'(lambda ()
                (setq eshell-pwd-convert-function
                      (lambda (f)
                        (if (file-equal-p (file-truename f) "/") "/" f)))
                ;; Helm completion with pcomplete
                (setq eshell-cmpl-ignore-case t)
                (eshell-cmpl-initialize)
                (define-key eshell-mode-map [remap eshell-pcomplete] 'helm-esh-pcomplete)
                ;; Helm lisp completion
                (define-key eshell-mode-map [remap eshell-complete-lisp-symbol] 'helm-lisp-completion-at-point)))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (when (executable-find "curl")
    (setq helm-google-suggest-use-curl-p t))

  (defun pl/helm-alive-p ()
    (if (boundp 'helm-alive-p)
        (symbol-value 'helm-alive-p)))

  (add-to-list 'golden-ratio-inhibit-functions 'pl/helm-alive-p)
#+END_SRC
