#+TITLE: Emacs settings
#+AUTHOR: Erik Šabič

* Package.el

** Archives

#+BEGIN_SRC emacs-lisp
  (setq package-archives '(("melpa" . "http://melpa.org/packages/")
                           ("gnu" . "http://elpa.gnu.org/packages/")))
#+END_SRC

** Package list

   A list of packages that I want.

#+BEGIN_SRC emacs-lisp
  (setq package-list '(beacon company flymake-easy flymake-go
          geiser go-errcheck go-rename go-mode golden-ratio golint
          helm async hydra js2-mode latex-preview-pane main-line
          org-beautify-theme magit leuven-theme cyberpunk-theme
          sudo-ext with-editor zlc))
#+END_SRC

** Automatic installation

   Initialize packages and install the ones missing from the list.

#+BEGIN_SRC emacs-lisp
  (package-initialize) ; activate all the packages (in particular autoloads)

  ; fetch the list of packages available 
  (unless package-archive-contents
    (package-refresh-contents))

  ; install the missing packages
  (dolist (package package-list)
    (unless (package-installed-p package)
      (package-install package)))
#+END_SRC


* Golang

  https://github.com/dominikh/go-mode.el

#+BEGIN_SRC emacs-lisp
(add-hook 'before-save-hook 'gofmt-before-save)
#+END_SRC

** Goimports

  Install goimports and replace gofmt.

#+BEGIN_SRC sh :tangle no
go get golang.org/x/tools/cmd/goimports
#+END_SRC
#+BEGIN_SRC emacs-lisp
(setq gofmt-command "goimports")
#+END_SRC


** Completion

   Requires gocode:

#+BEGIN_SRC sh :tangle no
go get github.com/nsf/gocode
#+END_SRC

#+BEGIN_SRC emacs-lisp
(require 'go-complete)
(add-hook 'completion-at-point-functions 'go-complete-at-point)
#+END_SRC


* Magit http://magit.vc/

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/site-lisp/magit/lisp")
(require 'magit)

(with-eval-after-load 'info
  (info-initialize)
  (add-to-list 'Info-directory-list
	       "~/.emacs.d/site-lisp/magit/Documentation/"))

#+END_SRC


* Helm

#+BEGIN_SRC emacs-lisp
(require 'helm)
(require 'helm-config)

; rebind tab to run persistent action
(define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action)
; make TAB works in terminal
(define-key helm-map (kbd "C-i") 'helm-execute-persistent-action)
; list actions using C-z
(define-key helm-map (kbd "C-z")  'helm-select-action)

(when (executable-find "curl")
  (setq helm-google-suggest-use-curl-p t))

(add-hook 'eshell-mode-hook
          (lambda ()
            (eshell-cmpl-initialize)
            (define-key eshell-mode-map [remap pcomplete] 'helm-esh-pcomplete)))

#+END_SRC


* Global keybindings

  Named keys have to be surrounded with angle brackets.

#+BEGIN_SRC emacs-lisp
;; magit
(global-set-key (kbd "C-x g") 'magit-status)

;; helm
(global-set-key (kbd "C-h SPC") 'helm-all-mark-rings)
(global-set-key (kbd "M-x") 'helm-M-x)

(global-set-key (kbd "`") 'other-window)
(global-set-key (kbd "C-<f4>") 'kill-buffer)

#+END_SRC













