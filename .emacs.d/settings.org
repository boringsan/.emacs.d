#+TITLE: Emacs settings
#+AUTHOR: Erik Šabič

Some settings apply to Emacs versions greater than 24, therefore
that's the required Emacs version of this config.

* General
** Load this file in init.el

#+BEGIN_SRC emacs-lisp :tangle init.el
(require 'org)
(org-babel-load-file
 (expand-file-name "settings.org"
                   user-emacs-directory))
#+END_SRC
** Package.el
*** Archives

#+BEGIN_SRC emacs-lisp
  (setq package-archives '(("melpa" . "http://melpa.org/packages/")
                           ("gnu" . "http://elpa.gnu.org/packages/")))
#+END_SRC

*** Package list

   A list of packages that I want.

#+NAME: package-list
   - async
   - beacon
   - cyberpunk-theme
   - flymake-go
   - geiser
   - go-errcheck
   - go-mode
   - golden-ratio
   - golint
   - helm
   - hydra
   - js2-mode
   - latex-preview-pane
   - leuven-theme
   - magit
   - org-bullets
   - sudo-ext
   - with-editor
   - zlc

*** Automatic installation

	Call package-initialize, fetch the package repositories and
	install any package -- defined in package-list -- that is missing.

#+BEGIN_SRC emacs-lisp :var list=package-list
  (package-initialize)

  (unless package-archive-contents
    (package-refresh-contents))

  (dolist (package-name list)
    (setq package (intern package-name))
    (unless (package-installed-p package)
      (package-install package)))
#+END_SRC

** Keybindings

  Named keys have to be surrounded with angle brackets.

#+TBLNAME: keybindings
  | key     | function            |
  |---------+---------------------|
  | C-h SPC | helm-all-mark-rings |
  | M-x     | helm-M-x            |
  | C-<f4>  | kill-buffer         |
  | C-x g   | magit-status        |
  | `       | other-window        |

#+BEGIN_SRC emacs-lisp :var data=keybindings[2:-1,] :results silent
  (mapc (lambda (row)
          (global-set-key (kbd (car row))
                          (intern (car (cdr row)))))
        data)
#+END_SRC

** Variables

#+BEGIN_SRC emacs-lisp
  (blink-cursor-mode -1)
  (column-number-mode t)
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (setq echo-keystrokes 0.001)
  (setq ring-bell-function
        (lambda ()
          (call-process "play" nil 0 nil
                        "~/.emacs.d/bell.wav")))
#+END_SRC

** Beacon

#+BEGIN_SRC emacs-lisp
  (beacon-mode 1)
  (setq beacon-blink-delay 0
        beacon-color 0.1
        beacon-size 80)
#+END_SRC


* Org

** Org-bullets

#+BEGIN_SRC emacs-lisp
(require 'org-bullets)
(add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
#+END_SRC


* Golang

  https://github.com/dominikh/go-mode.el

#+BEGIN_SRC emacs-lisp
(add-hook 'before-save-hook 'gofmt-before-save)
#+END_SRC

** Goimports

  Install goimports and replace gofmt.

#+BEGIN_SRC sh :tangle no
go get golang.org/x/tools/cmd/goimports
#+END_SRC

#+BEGIN_SRC emacs-lisp
(setq gofmt-command "goimports")
#+END_SRC

** Completion

   Requires gocode:

#+BEGIN_SRC sh :tangle no
go get github.com/nsf/gocode
#+END_SRC

#+BEGIN_SRC emacs-lisp
(require 'go-complete)
(add-hook 'completion-at-point-functions 'go-complete-at-point)
#+END_SRC


* Magit

  A git porcelain http://magit.vc/

#+BEGIN_SRC emacs-lisp
(add-to-list 'load-path "~/.emacs.d/site-lisp/magit/lisp")
(require 'magit)

(with-eval-after-load 'info
  (info-initialize)
  (add-to-list 'Info-directory-list
	       "~/.emacs.d/site-lisp/magit/Documentation/"))
#+END_SRC


* Helm and Ido

#+BEGIN_SRC emacs-lisp
  (require 'helm)
  (require 'helm-config)
  (require 'golden-ratio)

  (helm-mode)
  (golden-ratio-mode)

  (helm-autoresize-mode)

  (setq helm-split-window-in-side-p t)
#+END_SRC
  
** Keybindings

   Switch functions of <tab> and C-z.

#+BEGIN_SRC emacs-lisp
  (define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action)
  (define-key helm-map (kbd "C-i")   'helm-execute-persistent-action)
  (define-key helm-map (kbd "C-z")   'helm-select-action)
#+END_SRC


** Eshell integration

   Helm is not the best tool for eshell completition (currently).

#+BEGIN_SRC emacs-lisp
  ;; Compatibility 24.2/24.3
  (unless (fboundp 'eshell-pcomplete)
    (defalias 'eshell-pcomplete 'pcomplete))
  (unless (fboundp 'eshell-complete-lisp-symbol)
    (defalias 'eshell-complete-lisp-symbol 'lisp-complete-symbol))

  (add-hook 'eshell-mode-hook
            #'(lambda ()
                ;; Helm completion with pcomplete
                (setq eshell-cmpl-ignore-case t)
                (eshell-cmpl-initialize)
                (define-key eshell-mode-map
                  [remap eshell-pcomplete]
                  'helm-esh-pcomplete)
                ;; Helm lisp completion
                (define-key eshell-mode-map
                  [remap eshell-complete-lisp-symbol]
                  'helm-lisp-completion-at-point)))
#+END_SRC

#+BEGIN_SRC emacs-lisp
  (when (executable-find "curl")
    (setq helm-google-suggest-use-curl-p t))

  (defun pl/helm-alive-p ()
    (if (boundp 'helm-alive-p)
        (symbol-value 'helm-alive-p)))

  (add-to-list 'golden-ratio-inhibit-functions 'pl/helm-alive-p)
#+END_SRC



